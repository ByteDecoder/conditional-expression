{"version":3,"sources":["webpack://match/webpack/universalModuleDefinition","webpack://match/webpack/bootstrap","webpack://match/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","match","x","on","y","onMatch","with","test","equals","includes","typeOf","_typeof","else","express","fn","then","z","matched","onMatched"],"mappings":"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","file":"conditional-expression.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"match\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"match\"] = factory();\n\telse\n\t\troot[\"match\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Matching function to replace imperative switch statement with advanced functional pattern matching expression\n * @param {*} x simple value to be matched\n * @returns {object} match: a -> {on: b -> c, with: b -> c, equals: b -> c, includes: b -> c, typeof: b -> c, else: b -> c}\n * @example\n * match(2)\n * .equals(1).then('number one')\n * .equals(2).then('number two')\n * .else('unknown number');\n */\nconst match = x => ({\n  on: y => onMatch(x)(y),\n  with: y => onMatch(x)(() => y.test(x)),\n  equals: y => onMatch(x)(() => x === y),\n  includes: y => onMatch(x)(() => typeof x === 'string' && x.includes(y)),\n  typeOf: y => onMatch(x)(() => typeof x === y),\n  else: y => express(y)(x)\n});\n  \n/**\n * Triggeres a function or just returns a value depending on type of passed expression\n * @param {*} y value or a function\n * @param {*} x in case of expression being a function, param is passed as its parameter\n * @returns {*} express: (function, x) -> function (x), express: function -> function (), express: x -> x\n * @example express('hello'); // return hello\n * @example express(() => window.alert('hello')); // triggers alert\n */\nconst express = y => x => typeof y === 'function' ? y (x) : y;\n  \n/**\n * General function to evaluation matching based on a functional expression\n * @param {*} x simple value to be matched\n * @param {function} fn function used for matching\n * @returns {object} onMatch: a -> function -> {then: b -> c}\n */\nconst onMatch = x => fn => ({then: z => fn(x) === true ? matched(express(z)(x)) : match(x)});\n  \n/**\n * Once a match is made we are not processing any conditions anymore\n * @param {*} x\n * @returns {object} matched: a -> {on: a -> b, with: a -> b, equals: a -> b, includes: a -> b, typeof: a -> b, else: () -> a}\n */\nconst matched = x => ({\n  on: onMatched(x),\n  with: onMatched(x),\n  equals: onMatched(x),\n  includes: onMatched(x),\n  typeOf: onMatched(x),\n  else: () => x\n});\n  \n/**\n * Makes sure that 'then' will be returning matched result\n * @param {*} x result of matching\n * @returns {object} onMatched: a -> () ->  {then: () -> b}\n */\nconst onMatched = x => () => ({then: () => matched(x)});\n  \nexport default match;"],"sourceRoot":""}