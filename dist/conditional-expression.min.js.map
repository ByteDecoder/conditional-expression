{"version":3,"sources":["webpack://conditionalExpression/webpack/universalModuleDefinition","webpack://conditionalExpression/webpack/bootstrap","webpack://conditionalExpression/./src/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","higherOrderMatch","onFunction","evaluate","x","on","y","with","test","equals","includes","typeOf","_typeof","isGreaterThan","lessThan","atLeast","atMost","match","_objectSpread","onMatch","else","express","nestedMatch","onNestedMatch","matched","onMatched","nestedMatched","onNestedMatched","ignoreNestedMatch","onIgnoreNestedMatch","evaluation","then","thenMatch"],"mappings":"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","file":"conditional-expression.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"conditionalExpression\"] = factory();\n\telse\n\t\troot[\"conditionalExpression\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Higher-order function to serve as prototype for other matching functions\n * @param {function} onFunction function to be used for matching functions\n * @param {boolean} evaluate whether condition should be evaluated\n * @param {*} x simple value to be matched\n * @returns {object} higherOrderMatch :: a -> b -> c {on: d -> e, with: d -> e, equals: d -> e, includes: d -> e, typeof: d -> e}\n */\nconst higherOrderMatch = onFunction => evaluate => x => ({\n  on: y => onFunction(x)(evaluate && y(x) === true),\n  with: y => onFunction(x)(evaluate && y.test(x)),\n  equals: y => onFunction(x)(evaluate && x === y),\n  includes: y => onFunction(x)(evaluate && typeof x === 'string' && x.includes(y)),\n  typeOf: y => onFunction(x)(evaluate && typeof x === y),\n  isGreaterThan: y => onFunction(x)(evaluate && x > y),\n  lessThan: y => onFunction(x)(evaluate && x < y),\n  atLeast: y => onFunction(x)(evaluate && x >= y),\n  atMost: y => onFunction(x)(evaluate && x <= y)\n});\n\n/**\n * Matching function to replace imperative switch statement with advanced functional pattern matching expression\n * @param {*} x simple value to be matched\n * @returns {object} match: a -> {on: b -> c, with: b -> c, equals: b -> c, includes: b -> c, typeof: b -> c, else: b -> c}\n * @example\n * match(2)\n * .equals(1).then('number one')\n * .equals(2).then('number two')\n * .else('unknown number');\n */\nconst match = x => ({\n  ...higherOrderMatch(onMatch)(true)(x),\n  else: y => express(y)(x)\n});\n\n/**\n * Matching function to be used within nested branch\n * @param {*} x simple value to be matched\n * @returns {object} nestedMatch: a -> {on: b -> c, with: b -> c, equals: b -> c, includes: b -> c, typeof: b -> c, else: b -> c}\n */\nconst nestedMatch = x => ({\n  ...higherOrderMatch(onNestedMatch)(true)(x),\n  else: y => matched(express(y)(x))\n});\n\n/**\n * Once a match is made we are not processing any conditions anymore\n * @param {*} x simple value to be matched\n * @returns {object} matched: a -> {on: a -> b, with: a -> b, equals: a -> b, includes: a -> b, typeof: a -> b, else: () -> a}\n */\nconst matched = x => ({\n  ...higherOrderMatch(onMatched)(false)(x),\n  else: () => x\n});\n\n/**\n * Once a nested match is made we are not processing any conditions anymore\n * @param {*} x simple value to be matched\n * @returns {object} nestedMatched: a -> {on: a -> b, with: a -> b, equals: a -> b, includes: a -> b, typeof: a -> b, else: () -> a}\n */\nconst nestedMatched = x => ({\n  ...higherOrderMatch(onNestedMatched)(false)(x),\n  else: () => matched(x)\n});\n\n/**\n * If nested branch is under false condition match we want to ignore it\n * @param {*} x simple value to be matched\n * @returns {object} ignoreNestedMatch: a -> {on: a -> b, with: a -> b, equals: a -> b, includes: a -> b, typeof: a -> b, else: () -> a}\n */\nconst ignoreNestedMatch = x => ({\n  ...higherOrderMatch(onIgnoreNestedMatch)(false)(x),\n  else: () => match(x)\n});\n  \n/**\n * Triggeres a function or just returns a value depending on type of passed expression\n * @param {*} y value or a function\n * @param {*} x in case of expression being a function, param is passed as its parameter\n * @returns {*} express: (function, x) -> function (x), express: function -> function (), express: x -> x\n * @example express('hello'); // return hello\n * @example express(() => console.log('hello')); // prints out 'hello' to console\n */\nconst express = y => x => typeof y === 'function' ? y(x) : y;\n  \n/**\n * General function to evaluation matching based on a functional expression\n * @param {*} x simple value to be matched\n * @param {boolean} evaluation function used for matching\n * @returns {object} onMatch: a -> function -> {then: b -> c, thenMatch: b -> c}\n */\nconst onMatch = x => evaluation => ({\n  then: y => evaluation ? matched(express(y)(x)) : match(x),\n  thenMatch: y => evaluation ? nestedMatch(y) : ignoreNestedMatch(x)\n});\n\n/**\n * Makes sure that 'then' will be returning matched result\n * @param {*} x result of matching\n * @returns {object} onMatched: a -> () ->  {then: () -> b, thenMatch: () -> b}\n */\nconst onMatched = x => () => ({\n  then: () => matched(x),\n  thenMatch: () => nestedMatched(x)\n});\n\n/**\n * General function to evaluate nested matches\n * @param {*} x simple value to be matched\n * @returns {object} onNestedMatch: a -> function -> {then: b -> c}\n */\nconst onNestedMatch = x => evaluation => ({\n  then: y => evaluation ? nestedMatched(express(y)(x)) : nestedMatch(x)\n});\n\n/**\n * Makes sure that then will be returning result of nested match\n * @param {*} x result of matching\n * @returns {object} onNestedMatched: a -> () ->  {then: () -> b}\n */\nconst onNestedMatched = x => () => ({\n  then: () => nestedMatched(x)\n});\n\n/**\n * Makes sure that nested branch is not returning any result\n * @param {*} x simple value to be matched\n * @returns {object} onIgnoreNestedMatch: a -> () ->  {then: () -> b}\n */\nconst onIgnoreNestedMatch = x => () => ({\n  then: () => ignoreNestedMatch(x)\n});\n\nexport default match;"],"sourceRoot":""}